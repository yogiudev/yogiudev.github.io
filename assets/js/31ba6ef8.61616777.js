"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8345],{1787:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"SOLA/prompts/sla_context","title":"SLA Short Context","description":"","source":"@site/docs/SOLA/prompts/sla_context.md","sourceDirName":"SOLA/prompts","slug":"/SOLA/prompts/sla_context","permalink":"/docs/SOLA/prompts/sla_context","draft":false,"unlisted":false,"editUrl":"https://github.com/yogiudev/yogiudev.github.io/tree/main/docs/SOLA/prompts/sla_context.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Generate Queries from Metadata","permalink":"/docs/SOLA/prompts/how_to_generate"},"next":{"title":"SLA Metadata","permalink":"/docs/SOLA/prompts/sla_metadata"}}');var o=i(4848),r=i(8453);const s={},a="SLA Short Context",c={},l=[];function d(e){const t={code:"code",h1:"h1",header:"header",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"sla-short-context",children:"SLA Short Context"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'{\n  "schema_description": "This document outlines the schema for four MongoDB collections used for Service Level Agreement (SLA) management. Use this to construct aggregation pipelines.",\n  "collections": {\n    "slm_metric_data": {\n      "description": "The main transactional collection. Each document represents a single SLA metric being tracked against a specific record (like a ticket or change). This is the primary collection for most analytics queries.",\n      "key_fields": [\n        { "field": "metric_data_id", "type": "string", "description": "Unique identifier for this specific metric instance." },\n        { "field": "sla_profile", "type": "string", "description": "The ID of the SLA profile being applied. Links to the \'sla_profile\' collection via \'sla_id\'." },\n        { "field": "metric", "type": "string", "description": "The ID of the metric template being used. Links to the \'metric\' collection via \'metric_id\'." },\n        { "field": "module_id", "type": "string", "description": "Crucial field identifying the entity type. Common values are \'ticket\' (for incidents/problems), \'change\', \'request\', and \'release\'." },\n        { "field": "service_id", "type": "string", "description": "Identifier for the business service this SLA applies to." },\n        { "field": "is_breached", "type": "boolean", "description": "True if the SLA for this metric instance was violated." },\n        { "field": "status", "type": "integer", "description": "The current status of the metric (1: Active, 2: Paused, 3: Completed)." },\n        { "field": "metric_start_time", "type": "datetime", "description": "When the metric clock started." },\n        { "field": "metric_end_time", "type": "datetime", "description": "When the metric clock stopped (upon completion)." },\n        { "field": "metric_expected_time", "type": "datetime", "description": "The deadline by which the metric should be completed to avoid a breach." },\n        { "field": "total_hold", "type": "long", "description": "Total time in milliseconds the metric was paused or on hold." }\n      ]\n    },\n    "sla_profile": {\n      "description": "Defines the high-level SLA profiles, such as \'Gold Support\' or \'Standard Change\'. It acts as a container for specific metrics and targets.",\n      "key_fields": [\n        { "field": "sla_id", "type": "string", "description": "Primary key for an SLA profile. Referenced by \'slm_metric_data.sla_profile\'." },\n        { "field": "name", "type": "string", "description": "User-friendly name of the SLA profile (e.g., \'24x7 Critical Support\')." },\n        { "field": "compliance_target", "type": "double", "description": "The overall compliance percentage this profile aims for (e.g., 99.5)." }\n      ]\n    },\n    "metric": {\n      "description": "Defines the templates for individual metrics, such as \'Time to Resolution\' or \'Time to First Response\'.",\n      "key_fields": [\n        { "field": "metric_id", "type": "string", "description": "Primary key for a metric template. Referenced by \'slm_metric_data.metric\'." },\n        { "field": "name", "type": "string", "description": "User-friendly name of the metric (e.g., \'Incident Resolution Time\')." }\n      ]\n    },\n    "slm_metric_monitor_event": {\n      "description": "A detailed event log for each metric instance. It records every start, stop, pause, and resume event.",\n      "key_fields": [\n        { "field": "metric_data_id", "type": "string", "description": "Links each event back to a specific metric instance in \'slm_metric_data\'." },\n        { "field": "event_type", "type": "string", "description": "The type of event (e.g., \'START\', \'STOP\', \'PAUSE\')." },\n        { "field": "start_time", "type": "datetime", "description": "The timestamp of the event." },\n        { "field": "biz_time", "type": "long", "description": "Time elapsed during business hours for this event." },\n        { "field": "non_biz_time", "type": "long", "description": "Time elapsed outside business hours for this event." }\n      ]\n    }\n  },\n  "relationships": [\n    {\n      "from": "slm_metric_data",\n      "to": "sla_profile",\n      "join_type": "$lookup",\n      "description": "To get the SLA profile name, join \'slm_metric_data\' with \'sla_profile\'.",\n      "syntax": {\n        "$lookup": {\n          "from": "sla_profile",\n          "localField": "sla_profile",\n          "foreignField": "sla_id",\n          "as": "profile_info"\n        }\n      }\n    },\n    {\n      "from": "slm_metric_data",\n      "to": "metric",\n      "join_type": "$lookup",\n      "description": "To get the metric template name, join \'slm_metric_data\' with \'metric\'.",\n      "syntax": {\n        "$lookup": {\n          "from": "metric",\n          "localField": "metric",\n          "foreignField": "metric_id",\n          "as": "metric_info"\n        }\n      }\n    },\n    {\n      "from": "slm_metric_data",\n      "to": "slm_metric_monitor_event",\n      "join_type": "$lookup",\n      "description": "To analyze the detailed event history of a metric, join \'slm_metric_data\' with \'slm_metric_monitor_event\'.",\n      "syntax": {\n        "$lookup": {\n          "from": "slm_metric_monitor_event",\n          "localField": "metric_data_id",\n          "foreignField": "metric_data_id",\n          "as": "events"\n        }\n      }\n    }\n  ]\n}\n'})})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>a});var n=i(6540);const o={},r=n.createContext(o);function s(e){const t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);