"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5831],{4999:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"SOLA/prompts/team_metadata","title":"Teams Collection Metadata","description":"This document represents a Team Configuration for different modules (like incident, request, or change) within an organization. It defines team composition, approval workflows, notification mechanisms, and hierarchical approval levels.","source":"@site/docs/SOLA/prompts/team_metadata.md","sourceDirName":"SOLA/prompts","slug":"/SOLA/prompts/team_metadata","permalink":"/docs/SOLA/prompts/team_metadata","draft":false,"unlisted":false,"editUrl":"https://github.com/yogiudev/yogiudev.github.io/tree/main/docs/SOLA/prompts/team_metadata.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Generate Queries from Metadata","permalink":"/docs/SOLA/prompts/sla_query"},"next":{"title":"Generate Queries from Team Metadata","permalink":"/docs/SOLA/prompts/team_query"}}');var t=i(4848),r=i(8453);const o={},a="Teams Collection Metadata",l={},d=[{value:"Collection Overview",id:"collection-overview",level:2},{value:"Schema Definition",id:"schema-definition",level:2},{value:"\ud83d\udd11 Primary Key",id:"-primary-key",level:2},{value:"\ud83e\udde0 Key Concepts",id:"-key-concepts",level:2},{value:"1. <strong>Module Association</strong>",id:"1-module-association",level:3},{value:"2. <strong>Team Identity</strong>",id:"2-team-identity",level:3},{value:"3. <strong>Ownership</strong>",id:"3-ownership",level:3},{value:"\u2705 <code>staffs</code>",id:"-staffs",level:2},{value:"\ud83d\udccc Example",id:"-example",level:3},{value:"\ud83d\udcd8 Field: <code>sequence_staffs</code>",id:"-field-sequence_staffs",level:2},{value:"\u2705 Used When",id:"-used-when",level:3},{value:"\ud83d\udccc JSON Example",id:"-json-example",level:2}];function c(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"teams-collection-metadata",children:"Teams Collection Metadata"})}),"\n",(0,t.jsx)(n.p,{children:"This document represents a Team Configuration for different modules (like incident, request, or change) within an organization. It defines team composition, approval workflows, notification mechanisms, and hierarchical approval levels."}),"\n",(0,t.jsx)(n.h2,{id:"collection-overview",children:"Collection Overview"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Collection Name"}),": ",(0,t.jsx)(n.code,{children:"teams"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose"}),": Defines team structures, approval workflows, and member assignments"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Scope"}),": Cross-module team management for incidents, requests, and changes"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"schema-definition",children:"Schema Definition"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "label": "Infraon - Teams",\n  "kind": "node",\n  "type": "teams",\n  "required": true,\n  "condition": [],\n  "show": [],\n  "named_values": {\n    "team_id": {\n      "type": "string",\n      "description": "Unique identifier for the team"\n    },\n    "name": {\n      "type": "string",\n      "description": "Name of the team"\n    },\n    "description": {\n      "type": "string",\n      "description": "Short description of the team\'s role or function"\n    },\n    "module_id": {\n      "type": "number",\n      "description": "Module the team is associated with (10=Incident, 42=Request, 47=Change)"\n    },\n    "module_name": {\n      "type": "string",\n      "description": "Name of the module corresponding to module_id"\n    },\n    "group_id": {\n      "type": "number",\n      "description": "Optional grouping ID (e.g., department or category reference)"\n    },\n    "group_type": {\n      "type": "string",\n      "description": "Type of grouping, such as Department, Location, or Function"\n    },\n    "staff_selection_type": {\n      "type": "string",\n      "enum": ["individual", "group"],\n      "description": "Defines how staff are assigned (individual-based or group-based)"\n    },\n    "owner": {\n      "type": "array",\n      "items": {\n        "type": "object",\n        "properties": {\n          "profile_id": { "type": "string" },\n          "email": { "type": "string" },\n          "full_name": { "type": "string" }\n        }\n      },\n      "description": "List of owners responsible for the team"\n    },\n    "staffs": {\n      "type": "array",\n      "items": {\n        "type": "object",\n        "properties": {\n          "profile_id": { "type": "string" },\n          "email": { "type": "string" },\n          "full_name": { "type": "string" }\n        }\n      },\n      "description": "List of static team members when staff selection is manual"\n    },\n    "sequence_staffs": {\n      "type": "array",\n      "items": {\n        "type": "object",\n        "properties": {\n          "sequence": { "type": "number" },\n          "approval_percent": { "type": "number" },\n          "users": {\n            "type": "array",\n            "items": {\n              "type": "object",\n              "properties": {\n                "profile_id": { "type": "string" },\n                "email": { "type": "string" },\n                "full_name": { "type": "string" }\n              }\n            }\n          }\n        }\n      },\n      "description": "Approval workflow defined by sequence with approval thresholds"\n    },\n    "level_staff": {\n      "type": "array",\n      "description": "Defines hierarchical levels of approvers (used when sequence is disabled)",\n      "items": {\n        "type": "object",\n        "properties": {\n          "expertise_id": { "type": "string" },\n          "expertise": { "type": "string" },\n          "expertGroupLevel": {\n            "type": "array",\n            "items": {\n              "type": "object",\n              "properties": {\n                "level": { "type": "string" },\n                "level_id": { "type": "number" },\n                "approval_percent": { "type": "number" },\n                "users": {\n                  "type": "array",\n                  "items": {\n                    "type": "object",\n                    "properties": {\n                      "profile_id": { "type": "string" },\n                      "email": { "type": "string" },\n                      "full_name": { "type": "string" }\n                    }\n                  }\n                },\n                "notify_mail": {\n                  "type": "array",\n                  "items": { "type": "string" }\n                },\n                "notify_phone": {\n                  "type": "array",\n                  "items": { "type": "string" }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    "is_approval_sequence": {\n      "type": "boolean",\n      "description": "If true, uses sequence-based approval (overrides level-based flow)"\n    },\n    "response_required": {\n      "type": "boolean",\n      "description": "Specifies whether this team is required to respond during the workflow"\n    },\n    "is_add_notify_required": {\n      "type": "boolean",\n      "description": "Whether additional notifications are to be triggered"\n    },\n    "config": {\n      "type": "object",\n      "description": "Optional assignment rule configuration for automation or policy",\n      "properties": {\n        "rule_id": { "type": "number" },\n        "rule_type": { "type": "string" },\n        "is_rule_assigned": { "type": "boolean" }\n      }\n    },\n    "organization": {\n      "type": "string",\n      "description": "Organization or tenant identifier"\n    },\n    "business_hr_profile": {\n      "type": "object",\n      "description": "Business hours profile used for SLA alignment and escalation",\n      "properties": {\n        "profile_id": { "type": "string" },\n        "name": { "type": "string" }\n      }\n    },\n    "location": {\n      "type": "object",\n      "description": "Location metadata applicable for the team",\n      "properties": {\n        "location_category": { "type": "string" },\n        "value": {\n          "type": "array",\n          "items": { "type": "string" }\n        }\n      }\n    },\n    "tags": {\n      "type": "array",\n      "items": { "type": "string" },\n      "description": "Optional tags for filtering or grouping teams"\n    },\n    "asset_tags": {\n      "type": "array",\n      "items": { "type": "string" },\n      "description": "Tags linked to asset ownership or scope"\n    },\n    "events_thres_id": {\n      "type": "array",\n      "items": { "type": "string" },\n      "description": "Linked event threshold rules for notifications or metrics"\n    },\n    "is_deleted": {\n      "type": "boolean",\n      "description": "Soft delete flag; true if team is logically removed"\n    },\n    "is_preconfigure": {\n      "type": "boolean",\n      "description": "Indicates if this is a preconfigured/system-generated team"\n    },\n    "creation_time": {\n      "type": "datetime",\n      "description": "Timestamp when the team was created"\n    },\n    "last_update_time": {\n      "type": "datetime",\n      "description": "Timestamp of the most recent update"\n    }\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"-primary-key",children:"\ud83d\udd11 Primary Key"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"team_id"})," (String): Unique identifier for each team."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-key-concepts",children:"\ud83e\udde0 Key Concepts"}),"\n",(0,t.jsxs)(n.h3,{id:"1-module-association",children:["1. ",(0,t.jsx)(n.strong,{children:"Module Association"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"module_id"}),": Numerical identifier for the module the team belongs to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"module_name"}),": Human-readable name for the module.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Example mappings:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"10"})," \u2192 Incident"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"42"})," \u2192 Request"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"47"})," \u2192 Change"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"2-team-identity",children:["2. ",(0,t.jsx)(n.strong,{children:"Team Identity"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),": Name of the team."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"description"}),": Description of the team\u2019s function or role."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"group_type"}),": Type or category of the group."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"group_id"}),": Reference ID to a group configuration, if any."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"3-ownership",children:["3. ",(0,t.jsx)(n.strong,{children:"Ownership"})]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"owner"}),": List of users who are owners or maintainers of this team.","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'[\n  {\n    "profile_id": "128265819283744886784",\n    "email": "hrhr@mail.com",\n    "full_name": "Harish"\n  }\n]\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h1,{id:"-staffs-vs-sequence_staffs-in-teams-collection",children:["\ud83d\udc65 ",(0,t.jsx)(n.code,{children:"staffs"})," vs ",(0,t.jsx)(n.code,{children:"sequence_staffs"})," in ",(0,t.jsx)(n.code,{children:"teams"})," Collection"]}),"\n",(0,t.jsxs)(n.p,{children:["These fields define the team members involved in approvals, actions, or notifications within a module. The choice between them depends on whether approvals are ",(0,t.jsx)(n.strong,{children:"parallel"})," or ",(0,t.jsx)(n.strong,{children:"sequential"}),"."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"-staffs",children:["\u2705 ",(0,t.jsx)(n.code,{children:"staffs"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Used when:"})," ",(0,t.jsx)(n.code,{children:"is_approval_sequence = false"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"Meaning:"})," All members listed are considered ",(0,t.jsx)(n.strong,{children:"equal-level participants"}),". Actions (like approvals or assignments) can be performed by ",(0,t.jsx)(n.strong,{children:"any or all"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"-example",children:"\ud83d\udccc Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"staffs": [\n  {\n    "profile_id": "124894839217487384",\n    "email": "aashu@example.com",\n    "full_name": "Aashutosh Kumar"\n  },\n  {\n    "profile_id": "987498748937490872",\n    "email": "neha@example.com",\n    "full_name": "Neha Singh"\n  }\n]\n'})}),"\n",(0,t.jsxs)(n.h1,{id:"-sequence_staffs-format-in-teams-collection",children:["\ud83d\udd01 ",(0,t.jsx)(n.code,{children:"sequence_staffs"})," Format in ",(0,t.jsx)(n.code,{children:"teams"})," Collection"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"sequence_staffs"})," field defines a ",(0,t.jsx)(n.strong,{children:"step-wise (sequential)"})," approval or action path, where ",(0,t.jsx)(n.strong,{children:"each stage (sequence)"})," must be completed before the next begins."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"-field-sequence_staffs",children:["\ud83d\udcd8 Field: ",(0,t.jsx)(n.code,{children:"sequence_staffs"})]}),"\n",(0,t.jsx)(n.h3,{id:"-used-when",children:"\u2705 Used When"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"is_approval_sequence = true"})}),"\n",(0,t.jsxs)(n.li,{children:["Approvals must follow an ",(0,t.jsx)(n.strong,{children:"ordered path"}),", one after another"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-json-example",children:"\ud83d\udccc JSON Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'"sequence_staffs": [\n  {\n    "sequence": "Sequence 1",\n    "users": [\n      {\n        "profile_id": "111111111111111111111",\n        "email": "alice.doe@example.com",\n        "full_name": "Alice Doe"\n      }\n    ]\n  },\n  {\n    "sequence": "Sequence 2",\n    "users": [\n      {\n        "profile_id": "222222222222222222222",\n        "email": "bob.smith@example.com",\n        "full_name": "Bob Smith"\n      }\n    ]\n  }\n]\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var s=i(6540);const t={},r=s.createContext(t);function o(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);